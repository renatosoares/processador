000 # entra com o valor 7 na memória 00001 do banco registrador

valor		opB	opA	end_W 	op_ula
0000000000000 	00111 	00000 	00001	0100

binário: 	00000000000000011100000000010100
hexadecimal: 	0001C014

########################################################################
001 # entra com o valor 3 na memória 00010 do banco

valor		opB	opA	end_W 	op_ula
0000000000000 	00011 	00000 	00010	0100

binário: 	00000000000000001100000000100100	
hexadecimal: 	0000C024

########################################################################
002 # entra com o valor 9 na memória 00011 do banco

valor		opB	opA	end_W 	op_ula
0000000000000 	01001 	00000 	00011	0100

binário: 	00000000000000100100000000110100	
hexadecimal: 	00024034

########################################################################
003 # entra com o valor 70 na memória 00100 do banco

valor		opB	opA	end_W 	op_ula
0000000000010 	00110 	00000 	00100	0100

binário: 	00000000000100011000000001000100	
hexadecimal: 	00118044

########################################################################
004 # soma valor da memoria 00001 com a 00100 e armazena na 00101

valor		opB	opA	end_W 	op_ula
0000000000000 	00100 	00001 	00101	1010

binário: 	00000000000000010000001001011010		
hexadecimal: 	

########################################################################
005 # pula duas casas na memoria de instrução (pc)

valor		opB	opA	end_W 	op_ula
0000000001000 	00000 	00000 	10000	0000

binário:	00000000010000000000000100000000 			
hexadecimal: 	00400100

########################################################################
006 #

valor		opB	opA	end_W 	op_ula
0000000000000 	00001 	00000 	00110	0100

binário: 	
hexadecimal: 	

########################################################################
007 # 

valor		opB	opA	end_W 	op_ula
0000000000000 	00001 	00000 	00111	0100

binário: 	
hexadecimal: 	

########################################################################
008 # soma valores no operando A e B que busca dados da memoria 7 e 6 e grava na memoria 8

		opB	opA	end_W 	op_ula
0000000000000 	00111 	00110 	01000	1010
|    valor externo  |   |obs|

binário: 	
hexadecimal: 	

########################################################################
009 # barrel shift move 16 bits a direita

		opB	opA	end_W 	op_ula
000000011000 	00000 	00000 	00000	0000
|    valor externo  |   |obs|

binário: 	
hexadecimal:
